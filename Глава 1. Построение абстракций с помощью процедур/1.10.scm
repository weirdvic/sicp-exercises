#lang sicp

;; Упражнение 1.10.

;; Следующая процедура вычисляет математическую функцию,
;; называемую функцией Аккермана.

(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

;; Каковы значения следующих выражений?
(A 1 10)
(A 2 4)
(A 3 3)

;; Рассмотрим следующие процедуры, где A -- процедура,
;; определенная выше:
(define (f n) (A 0 n))
(define (g n) (A 1 n))
(define (h n) (A 2 n))
(define (k n) (* 5 n n))
;; Решение:

;; Output: 1024
;; Output: 65536
;; Output: 65536

;; (f n) -- математически работает как 2 * n
;; (g n) -- работает как 0 для n = 0, 2^n для n > 0
;; (h n) -- работает как 0 для n = 0, 2 для n = 1 и 2^2^2^…(n-1 раз) для n > 1
