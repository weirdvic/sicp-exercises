#lang sicp

;; Упражнение 1.3
;; Определите процедуру, которая принимает в качестве аргументов три числа
;; и возвращеает сумму квадратов двух больших из них.

;; Решение:

;; Сначала определяем функцию square, которая будет
;; принимать на вход число и возвращать его квадрат
(define (square x)
  (* x x))

;; Затем определим функцию, которая будет принимать
;; список из трёх чисел, определять наибольшие два
;; и возвращать их в виде нового списка
(define (max-two-of-three a b c)
  (if (>= a b)
      (if (>= b c)
          (list a b)
          (list a c))
      (if (>= a c)
          (list b a)
          (list b c))))

;; После этого определяем функцию, которая принимает
;; два числа и возвращает сумму квадратов этих чисел
(define (sum-of-squares x y)
  (+ (square x)(square y)))

;; Наконец, определяем функцию, которая описана в задании
(define (greater-squares a b c)
  (apply sum-of-squares (
                  max-two-of-three a b c)))

;; Функция получает три числа и возвращает сумму квадратов
;; двух наибольших чисел
(greater-squares 1 2 4)
;; Output: 13
